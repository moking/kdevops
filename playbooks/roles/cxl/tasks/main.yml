---
- name: Import optional extra_args file
  include_vars: "{{ item }}"
  ignore_errors: yes
  with_first_found:
    - files:
      - "../extra_vars.yml"
      - "../extra_vars.yaml"
      - "../extra_vars.json"
      skip: true
  tags: vars

# Distro specific
- name: Install CXL build deps
  include_tasks: install-deps/main.yml

- include_role:
    name: create_data_partition
  tags: [ 'ndctl', 'data_partition' ]

- name: git clone ndctl
  git:
    repo: "{{ ndctl_git }}"
    dest: "{{ ndctl_data }}"
    version: "{{ ndctl_version }}"
    update: yes
  tags: [ 'git', 'ndctl' ]

- name: Run meson setup build for ndctl
  command: "meson setup build"
  tags: [ 'ndctl' ]
  args:
    chdir: "{{ ndctl_data }}"

- name: Enable unit tests as per meson
  command: "meson configure -Dtest=enabled -Ddestructive=enabled build"
  tags: [ 'ndctl' ]
  args:
    chdir: "{{ ndctl_data }}"

- name: Run meson compile -C build for ndctl
  command: "meson compile -C build"
  tags: [ 'ndctl' ]
  args:
    chdir: "{{ ndctl_data }}"

- name: Run meson install -C build
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  command: "meson install -C build"
  tags: [ 'ndctl' ]
  args:
    chdir: "{{ ndctl_data }}"

- name: Convert cxl memory to kernel managed memory
  include_tasks: cxl-mem-setup/main.yml
  tags: [ 'cxl-mem-setup' ]
  when:
    - not kdevops_enable_cxl_dcd|bool

- name: Create a dynamic capacity region for further dc extent add operations
  include_tasks: cxl-create-dc-region/main.yml
  tags: [ 'cxl-create-dc-region' ]
  when:
    - kdevops_enable_cxl_dcd|bool

- name: Setup CXL DCD device as system ram
  include_tasks: cxl-dcd-setup/main.yml
  vars:
    qmp_port_str: "{{ kdevops_qmp_str }}"
  tags: [ 'cxl-dcd-setup' ]
  when:
    - kdevops_enable_cxl_dcd|bool

- name: Set the path to cxl workflow
  set_fact:
    cxl_workflow_target: "../workflows/cxl/"
  tags: [ 'ndctl', 'cxl-test-prep', 'copy_results' ]

- name: Get used target kernel version
  tags: [ 'ndctl', 'cxl-test-prep', 'copy_results' ]
  command: "uname -r"
  register: uname_cmd

- name: Store last kernel variable
  set_fact:
    last_kernel: "{{ uname_cmd.stdout_lines | regex_replace('\\]') | regex_replace('\\[') | replace(\"'\",'') }}"
  tags: [ 'ndctl', 'cxl-test-prep', 'copy_results' ]
  run_once: true

- name: Set the path where we collect our cxl results
  set_fact:
    cxl_results_full_path: "{{ topdir_path }}/workflows/selftests/results/"
    cxl_workflow_dir: "../workflows/cxl"
    cxl_results_target: "../workflows/cxl/results/last-run/{{ last_kernel }}"
  tags: [ 'ndctl', 'cxl-test-prep', 'copy_results' ]

- name: Print uname for each host
  tags: [ 'ndctl', 'cxl-test-prep', 'copy_results' ]
  debug: var=ansible_kernel

- name: Clear out old meson results directory on target hosts
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  file:
    state: absent
    path: "{{ ndctl_data }}/{{ ndctl_meson_testlog }}"
  tags: [ 'ndctl', 'cxl-test-prep', 'copy_results' ]

- name: Load configfs module
  tags: [ 'ndctl', 'cxl-test-prep', 'run_tests' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  command: "modprobe configfs"
  when:
    - kdevops_run_cxl_tests|bool

- name: Enable low-level messages on console
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  command: sysctl kernel.printk="8 8 1 7"
  tags: [ 'ndctl', 'cxl-test-prep', 'run_tests' ]
  when:
    - kdevops_run_cxl_tests|bool

- name: modprobe cxl_test
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  command: "modprobe cxl_test"
  tags: [ 'ndctl', 'cxl-test-probe', 'run_tests' ]
  args:
    chdir: "{{ ndctl_data }}"
  when:
    - kdevops_run_cxl_tests|bool

- name: modprobe -r cxl_test
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  command: "modprobe -r cxl_test"
  tags: [ 'ndctl', 'cxl-test-probe', 'run_test' ]
  args:
    chdir: "{{ ndctl_data }}"
  when:
    - kdevops_run_cxl_tests|bool

- name: Run meson cxl unit test suite
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  ignore_errors: yes
  no_log: True
  command: "meson test -C build --suite cxl"
  tags: [ 'ndctl', 'cxl-test-meson', 'run_tests' ]
  args:
    chdir: "{{ ndctl_data }}"
  when:
    - kdevops_run_cxl_tests|bool

- name: Clean up our localhost results/last-run directory
  local_action: file path="{{ cxl_results_target }}/{{ item }}" state=absent
  with_items:
    - "last-run"
  loop_control:
    label: "{{ item }}"
  run_once: true
  tags: [ 'ndctl', 'cxl-test-meson', 'copy_results' ]

- name: Create empty last-run directory
  local_action: file path="{{ cxl_results_target }}/" state=directory
  run_once: true
  tags: [ 'ndctl', 'cxl-test-meson', 'copy_results' ]

- name: Document used target kernel version
  local_action: "shell echo {{ last_kernel }} > {{ cxl_results_target }}/last-kernel.txt"
  run_once: true
  tags: [ 'ndctl', 'cxl-test-meson', 'copy_results' ]

- name: Look for our test results {{ ndctl_meson_testlog | basename }}
  tags: [ 'ndctl', 'cxl-test-meson', 'copy_results' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  find:
    paths: "{{ ndctl_data }}"
    recurse: yes
    patterns:
      - "{{ ndctl_meson_testlog | basename }}"
  register: output_log_files

- name: Copy over our test result into {{ cxl_results_target }}
  tags: [ 'ndctl', 'cxl-test-meson', 'copy_results' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  vars:
    item_with_target: "{{ item.path | basename }}"
  fetch:
    src: "{{ item.path }}"
    dest: "{{ cxl_results_target }}/{{ item_with_target }}"
    flat: yes
  with_items: "{{ output_log_files.files }}"
  loop_control:
    label: "Copying {{ item_with_target }} ..."
  when:
    - output_log_files.matched > 0
